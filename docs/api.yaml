openapi: 3.0.0
info:
  title: ShoppifyIO API
  version: 1.0.0
  description: API for ShoppifyIO.

servers:
  - url: 'http://127.0.0.1:5000'
    description: Localhost server

paths:
  /register:
    put:
      summary: Register new user.
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        201:
          description: User successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request, one or more parameters are empty or missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: User login.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        200:
          description: Successful login.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        400:
          description: Bad request, username or password missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The user's ID.
          example: 1
        username:
          type: string
          description: The user's username.
          example: johndoe
        email:
          type: string
          description: The user's email address.
          example: johndoe@example.com
    RegisterUser:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          description: The user's username.
          example: johndoe
        email:
          type: string
          description: The user's email address.
          example: johndoe@example.com
        password:
          type: string
          description: The user's password.
          example: '123456'
    UserLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: The user's username.
          example: johndoe
        password:
          type: string
          description: The user's password.
          example: '123456'
    UserLoginResponse:
      type: object
      properties:
        token:
          type: string
          description: The authentication token.
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        user:
          $ref: '#/components/schemas/User'
    Error:
      type: object
      properties:
        error:
          type: string
          description: The error message.
          example: One or more parameters are empty or missing.
